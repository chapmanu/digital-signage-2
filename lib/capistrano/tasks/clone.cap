include Helpers

desc "Clones upstream data to the remote target"
task :clone do

  if fetch(:stage) == :staging
    print_warning("You cant run this task on staging!")
    next
  end

  # Production server for cloning
  server "dsv-mkt-prd01", user: "charles", roles: %w{upstream}
  set :upstream_domain, "dev-signage.chapman.edu"
  set :upstream_deploy_to, "/var/www/signage"
  set :stage_deploy_to, fetch(:deploy_to)

  # Staging server for cloning to
  server "dsv-mkt-dev01", user: "charles", roles: %w{downstream}
  set :downstream_domain, "dev-signage.chapman.edu"
  set :downstream_deploy_to, "/var/www/signage"
  set :stage_deploy_to, fetch(:deploy_to)

  # Local for cloning to
  set :local_path, Dir.pwd

  on roles(:web) do

    on roles(:downstream) do |downstream|
      set :downstream_user, downstream.user
      set :downstream_host, downstream
    end

    on roles(:upstream) do |upstream|
      set :upstream_user, upstream.user
      set :upstream_host, upstream
    end
    
    set :deploy_to, fetch(:upstream_deploy_to)
    upstream_shared_path = "#{shared_path}"

    set :deploy_to, fetch(:stage_deploy_to)
    dest_shared_path = "#{shared_path}"
    execute "rsync -avzO --delete --stats --progress #{upstream_shared_path}/public/uploads/ #{fetch(:downstream_user)}@#{fetch(:downstream_host)}:#{dest_shared_path}/public/uploads/"

    run_locally do
      execute "rsync -avzO --delete --stats --progress #{fetch(:upstream_user)}@#{fetch(:upstream_host)}:#{upstream_shared_path}/public/uploads/ #{fetch(:local_path)}/public/uploads/"
    end
  end


end
